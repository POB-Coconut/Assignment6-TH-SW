{"version":3,"sources":["components/Input.jsx","components/Result.jsx","components/StartButton.jsx","utils/time.js","hook/useTimer.js","utils/validation.js","hook/useInputs.js","utils/config.js","utils/convert.js","utils/sort.js","hook/useSort.js","components/Timer.jsx","styles/GlobalStyles.js","App.jsx","index.js"],"names":["Input","forwardRef","_","ref","Wrapper","Title","InputStyled","placeholder","styled","div","h2","input","Number","h3","Result","type","numbers","join","Button","button","StartButton","onSubmit","onClick","setKoreaTime","date","Date","UTC","getTime","getTimezoneOffset","toLocaleDateString","year","weekday","month","day","useTimer","useState","time","setTime","useEffect","setInterval","regex","useInputs","setNumbers","inputRef","useRef","useCallback","value","current","matches","match","validateInput","alert","split","map","mergeSort","array","order","length","middleIndex","Math","floor","left","slice","right","merge","result","push","shift","useSort","number","ascNumber","setAscNumber","descNumber","setDescNumber","setTimeout","descendingSort","Time","Timer","GlobalStyles","createGlobalStyle","reset","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.88744d03.chunk.js","sourcesContent":["import { forwardRef } from 'react';\nimport styled from 'styled-components';\n\nconst Input = forwardRef((_, ref) => {\n  return (\n    <Wrapper>\n      <Title>입력창</Title>\n      <InputStyled ref={ref} placeholder='ex: 1,2,3' />\n    </Wrapper>\n  );\n});\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n`;\n\nconst Title = styled.h2``;\n\nconst InputStyled = styled.input`\n  width: 50%;\n  height: 48px;\n  font-size: 24px;\n`;\n\nexport default Input;\n","import styled from 'styled-components';\n\nconst Result = ({ type, numbers }) => {\n  return (\n    <Wrapper>\n      <Title>{type} 결과</Title>\n      <Number>{numbers.join(',')}</Number>\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  border: 1px solid black;\n  gap: 24px;\n`;\n\nconst Title = styled.h2``;\n\nconst Number = styled.h3`\n  font-size: 24px;\n`;\n\nexport default Result;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst StartButton = ({ onSubmit }) => {\n  return (\n    <Wrapper>\n      <Button onClick={onSubmit}>시작</Button>\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled.div``;\n\nconst Button = styled.button`\n  width: 120px;\n  height: 36px;\n  font-size: 24px;\n`;\n\nexport default StartButton;\n","export const setKoreaTime = (type) => {\n  const date = new Date();\n\n  const UTC = date.getTime() + date.getTimezoneOffset() * 60 * 1000;\n  const KST = UTC + 9 * 60 * 60 * 1000;\n\n  const options = { year: 'numeric', weekday: 'long', month: 'long', day: 'numeric' };\n\n  return new Date(KST).toLocaleDateString(type, options);\n};\n","import { useState, useEffect } from 'react';\nimport { setKoreaTime } from '../utils/time';\n\nconst useTimer = (type) => {\n  const [time, setTime] = useState(setKoreaTime(type));\n\n  useEffect(() => {\n    setInterval(() => {\n      setTime(setKoreaTime(type));\n    }, 1000);\n  }, [type]);\n\n  return time;\n};\n\nexport default useTimer;\n","export const validateInput = (value) => {\n  const matches = value.match(regex);\n\n  if (matches === null) return false;\n  else if (matches[0] !== value) return false;\n  else return true;\n};\n\nconst regex = /([0-9]+,){1,}([0-9+]+)/;\n","import { useState, useCallback, useRef } from 'react';\nimport { ERROR_MSG } from '../utils/config';\nimport { validateInput } from '../utils/validation';\nimport { convertToNumArray } from '../utils/convert';\n\nconst useInputs = () => {\n  const [numbers, setNumbers] = useState([]);\n  const inputRef = useRef(null);\n\n  const onSubmit = useCallback(() => {\n    const value = inputRef.current.value;\n    if (validateInput(value)) {\n      setNumbers(convertToNumArray(value));\n    } else {\n      inputRef.current.value = null;\n      alert(ERROR_MSG);\n    }\n  }, []);\n\n  return [numbers, onSubmit, inputRef];\n};\n\nexport default useInputs;\n","export const ERROR_MSG = `잘못된 입력값입니다.\\nex: 1,2,3,...`;\n","export const convertToNumArray = (stringArray) => stringArray.split(',').map((_) => Number(_));\n","export const ascendingSort = (numbers) => mergeSort(numbers, 'asc');\nexport const descendingSort = (numbers) => mergeSort(numbers, 'desc');\n\nconst mergeSort = (array, order) => {\n  if (array.length === 1) return array;\n\n  const middleIndex = Math.floor(array.length / 2);\n  const left = array.slice(0, middleIndex);\n  const right = array.slice(middleIndex);\n\n  return merge(mergeSort(left, order), mergeSort(right, order), order);\n};\n\nconst merge = (left, right, order) => {\n  const result = [];\n\n  while (left.length !== 0 && right.length !== 0) {\n    left[0] <= right[0] ? result.push(left.shift()) : result.push(right.shift());\n  }\n\n  return order === 'asc' ? [...result, ...left, ...right] : [...right, ...left, ...result];\n};\n","import { useState, useEffect } from 'react';\nimport { ascendingSort, descendingSort } from '../utils/sort';\n\nconst useSort = (number) => {\n  const [ascNumber, setAscNumber] = useState([]);\n  const [descNumber, setDescNumber] = useState([]);\n\n  useEffect(() => {\n    if (!number.length) return; // 첫 마운트 제외\n\n    setAscNumber(ascendingSort([...number]));\n    setDescNumber([]);\n\n    setTimeout(() => {\n      setDescNumber(descendingSort([...number]));\n    }, 3000);\n  }, [number]);\n\n  return [ascNumber, descNumber];\n};\n\nexport default useSort;\n","import styled from 'styled-components';\nimport { useTimer } from '../hook';\n\nconst Timer = ({ type }) => {\n  const time = useTimer(type);\n\n  return (\n    <Wrapper>\n      {type}\n      <Time>{time}</Time>\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled.div`\n  width: 100%;\n  border: 1px solid black;\n`;\n\nconst Time = styled.h3``;\n\nexport default Timer;\n","import { createGlobalStyle } from 'styled-components';\nimport reset from 'styled-reset';\n\nconst GlobalStyles = createGlobalStyle` \n    ${reset}\n    a{\n        text-decoration: none;\n        color: inherit;\n    }\n    *{\n        box-sizing: border-box;\n    }\n    body {\n        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n    }\n`;\n\nexport default GlobalStyles;\n","import { Input, Timer, Result, StartButton } from './components';\nimport { useInputs, useSort } from './hook';\nimport styled from 'styled-components';\nimport GlobalStyles from './styles/GlobalStyles';\n\nconst App = () => {\n  const [value, onSubmit, inputRef] = useInputs();\n  const [ascNumber, descNumber] = useSort(value);\n\n  return (\n    <>\n      <GlobalStyles />\n      <Wrapper>\n        <Timer type='ko-KR' />\n        <Input ref={inputRef} />\n        <StartButton onSubmit={onSubmit} />\n        <Result type='오름차순' numbers={ascNumber} />\n        <Result type='내림차순' numbers={descNumber} />\n        <Timer type='en-US' />\n      </Wrapper>\n    </>\n  );\n};\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n`;\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}